{"version":3,"file":"static/js/473.6d82b616.chunk.js","mappings":"0KACA,EAA4B,yBAA5B,EAAuE,+BAAvE,EAAiH,wBAAjH,EAAwJ,4BAAxJ,EAA8L,uBAA9L,EAAoO,4BAApO,EAAyQ,sB,8ECAzQ,MAA0B,8BAA1B,EAAgE,4B,4BCGnDA,EAAQ,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAgD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAYC,ECH7C,SAAkCC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,GAAS,EAAAC,EAAA,GAA6BL,EAAQC,GAGlD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GAEpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,EDb+D,MAC9DU,EAAWjB,GAAWC,EAE5B,OAAO,gCACFgB,GACK,kBAAMC,UAAWC,EAAjB,cAAmCC,OAAOnB,GAA1C,YACAoB,GAEN,kCAAOH,UAAWD,EAAWE,OAAeE,GAAevB,GAAWI,QAIjEoB,EAAc,SAACC,EAAMC,EAAWtB,GACzC,OACI,0BACI,SAACuB,EAAA,GAAD,QACIF,KAAMA,EACNC,UAAWA,GACPtB,OEmBdwB,GAAYC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,SAAlBD,EAhCL,SAACzB,GACV,OACI,gBAAKgB,UAAWW,EAAhB,UACI,kBAAMC,SAAU5B,EAAM6B,aAAtB,UACKT,EAAY,QAASzB,EAAO,CAAEmC,YAAa,SAAUC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,MAC1Eb,EAAY,WAAYzB,EAAO,CAAEmC,YAAa,WAAYC,SAAU,CAACC,EAAAA,IAAWE,KAAM,cACvF,iBAAKlB,UAAWW,EAAhB,WACI,SAACJ,EAAA,EAAD,CAAOP,UAAWW,EAAsBN,KAAM,aAAcC,UAAW,QAASY,KAAK,cACrF,8CAGHlC,EAAMD,OACD,iBAAKiB,UAAWW,EAAhB,cAA4C3B,EAAMD,MAAlD,YACAoB,EAGLnB,EAAMmC,YACD,iBAAKnB,UAAWW,EAAhB,WACE,gBAAKS,IAAKpC,EAAMmC,WAAYE,IAAI,YAC/BjB,EAAY,UAAWzB,EAAO,CAAEqB,UAAWW,EAA0BI,SAAU,CAACC,EAAAA,cAEnFb,GAGN,gBAAKH,UAAWW,EAAhB,UACI,iDAwBpB,GAAeW,EAAAA,EAAAA,KANS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBE,iBAAkBH,EAAME,KAAKE,GAC7BR,WAAYI,EAAME,KAAKN,cAGa,CAAES,MAAAA,EAAAA,IAA1C,EAdc,SAAA5C,GAGV,OAAOA,EAAMwC,QACP,SAAC,KAAD,CAAUK,GAAE,mBAAc7C,EAAM0C,qBAChC,SAAClB,EAAD,CAAWI,SAJA,SAAAkB,GAAc9C,EAAM4C,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAIvEN,MAAO5C,EAAM4C,MAAOT,WAAYnC,EAAMmC","sources":["webpack://training-s-n/./src/components/Login/Login.module.css?3530","webpack://training-s-n/./src/Common/Validation/FormControls.module.css?aa91","Common/Validation/FormControls.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__ZR2r+\",\"checkboxWrapper\":\"Login_checkboxWrapper__NtbIW\",\"checkbox\":\"Login_checkbox__s8QqH\",\"summaryError\":\"Login_summaryError__ET8FS\",\"captcha\":\"Login_captcha__crt31\",\"captchaInput\":\"Login_captchaInput__PXyfi\",\"Button\":\"Login_Button__JbYlV\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"FormControls_message__L3Yod\",\"error\":\"FormControls_error__TZIPt\"};","import React from \"react\";\r\nimport styles from './FormControls.module.css'\r\nimport { Field } from 'redux-form';\r\n\r\nexport const Input = ({ input, meta: { touched, error }, ...props }) => {\r\n    const hasError = touched && error\r\n\r\n    return <>\r\n        {hasError\r\n            ? <span className={styles.message}> {String(error)} </span>\r\n            : undefined\r\n        }\r\n        <input className={hasError ? styles.error : undefined} {...input} {...props} />\r\n    </>\r\n}\r\n\r\nexport const createField = (name, component, props) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                name={name}\r\n                component={component}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport loginStyles from './Login.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport { login } from './../../redux/reduсers/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { required, emailValidator } from './../../Common/Validation/Validators';\r\nimport { Input, createField } from './../../Common/Validation/FormControls';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <div className={loginStyles.container}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                {createField('email', Input, { placeholder: 'E-mail', validate: [required, emailValidator] })}\r\n                {createField('password', Input, { placeholder: 'Password', validate: [required], type: 'password' })}\r\n                <div className={loginStyles.checkboxWrapper}>\r\n                    <Field className={loginStyles.checkbox} name={\"rememberMe\"} component={\"input\"} type='checkbox' />\r\n                    <div> Remember me </div>\r\n                </div>\r\n\r\n                {props.error\r\n                    ? <div className={loginStyles.summaryError}> {props.error} </div>\r\n                    : undefined\r\n                }\r\n\r\n                {props.captchaURL\r\n                    ? <div className={loginStyles.captcha}>\r\n                        <img src={props.captchaURL} alt=\"captcha\" />\r\n                        {createField('captcha', Input, { className: loginStyles.captchaInput, validate: [required] })}\r\n                    </div>\r\n                    : undefined\r\n                }\r\n\r\n                <div className={loginStyles.Button}>\r\n                    <button>Log In</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginForm = reduxForm({ form: 'login' })(Form)\r\n\r\n\r\nconst Login = props => {\r\n    const onSubmit = formData => { props.login(formData.email, formData.password, formData.rememberMe, formData.captcha) }\r\n\r\n    return props.isAuth\r\n        ? <Redirect to={`/profile/${props.authorizedUserID}`} />\r\n        : <LoginForm onSubmit={onSubmit} login={props.login} captchaURL={props.captchaURL} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserID: state.auth.id,\r\n    captchaURL: state.auth.captchaURL,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)"],"names":["Input","input","meta","touched","error","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","hasError","className","styles","String","undefined","createField","name","component","Field","LoginForm","reduxForm","form","loginStyles","onSubmit","handleSubmit","placeholder","validate","required","emailValidator","type","captchaURL","src","alt","connect","state","isAuth","auth","authorizedUserID","id","login","to","formData","email","password","rememberMe","captcha"],"sourceRoot":""}